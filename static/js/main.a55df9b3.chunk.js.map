{"version":3,"sources":["logo.svg","View.js","App.js","reportWebVitals.js","index.js"],"names":["Title","Layout","Header","Content","Footer","Typography","View","Paragraph","Text","Link","props","getCbsaTitle","id","a","fetch","then","res","json","records","fields","cbsa_title","getName","state","area","country","county","getData","week","actualsTimeseries","slice","weekAvgCases","map","x","newCases","reduce","y","weekAvgDeaths","newDeaths","casesDayTrend","actuals","deathsDayTrend","title","setState","loaded","cases","deaths","casesBefore","deathsBefore","parseInt","match","params","toString","toUpperCase","this","style","border","align","justify","span","bordered","loading","gutter","value","Math","abs","valueStyle","color","prefix","ArrowUpOutlined","ArrowDownOutlined","React","Component","areas","App","className","basename","process","env","PUBLIC_URL","path","render","includes","to","from","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a55df9b3.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from \"react\"\nimport { Layout, Divider, Spin, Typography, Card, Statistic, Row, Col } from \"antd\"\nimport { ArrowUpOutlined, ArrowDownOutlined } from '@ant-design/icons';\n\nconst { Header, Content, Footer } = Layout;\nconst { Title, Paragraph, Text, Link } = Typography;\n\nclass View extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            id: props.match.params.id.toString().toUpperCase(),\n            area: props.match.params.area,\n            loaded: false,\n            title: null,\n            cases: null,\n            deaths: null,\n            weekAvgCases: null,\n            weekAvgDeaths: null,\n            casesDayTrend: null,\n            deathsDayTrend: null,\n        }\n    }\n    \n    componentDidMount(){\n        this.getData()\n    }\n\n    getCbsaTitle = async (id) => {\n        return await fetch('https://public.opendatasoft.com/api/records/1.0/search/?dataset=core-based-statistical-areas-cbsas-and-combined-statistical-areas-csas&q=&facet=cbsa_code&refine.cbsa_code=' + id)\n        .then(res => res.json())\n        .then(res => res.records[0].fields.cbsa_title)\n    }\n\n    getName = (res) => {\n        if(this.state.area === 'state')\n            return `${res.state}, ${res.country}`\n        if(this.state.area === 'county')\n            return `${res.county}, ${res.state}`\n        if(this.state.area === 'cbsa')\n            return this.getCbsaTitle(this.state.id)\n        return 'United States'\n    }\n\n    getData = async () => {\n        fetch('https://api.covidactnow.org/v2/' + this.state.area + '/' + this.state.id + '.timeseries.json?apiKey=7db28a8b69614fc78c3556b2af94b9c5')\n        .then(res => res.json())\n        .then(async (res) => {\n            let week = res.actualsTimeseries.slice(-7)\n            let weekAvgCases = week.map(x => x.newCases || 0).reduce((x, y) => x + y, 0) / 7\n            let weekAvgDeaths = week.map(x => x.newDeaths || 0).reduce((x, y) => x + y, 0) / 7\n            let casesDayTrend = (res.actuals.newCases - week.slice(-2)[0].newCases) / week.slice(-2)[0].newCases\n            let deathsDayTrend = (res.actuals.newDeaths - week.slice(-2)[0].newDeaths) / (week.slice(-2)[0].newDeaths || 1)\n            let title = await this.getName(res)\n            this.setState({\n                loaded: true,\n                title: title,\n                cases: res.actuals.newCases,\n                deaths: res.actuals.newDeaths,\n                casesBefore: res.actuals.newCases - week[5].newCases,\n                deathsBefore: res.actuals.newDeaths - week[5].newDeaths,\n                weekAvgCases: parseInt(weekAvgCases),\n                weekAvgDeaths: parseInt(weekAvgDeaths),\n                casesDayTrend: casesDayTrend,\n                deathsDayTrend: deathsDayTrend,\n            })\n        })\n    }\n\n\n    render() {\n        return (\n            <div>\n                <Title>{ this.state.title || '...' }</Title>\n                <Card style={ { border: `none` } } >\n                    <Row align=\"middle\" justify=\"center\">\n                        <Col span={ 8 }>\n                            <Card title=\"Cases\" bordered={ false } loading={ this.state.loading }>\n                                <Row justify=\"space-around\" gutter={ [24, 36] } >\n                                    <Col>\n                                        <Statistic title=\"New Cases\" value={ this.state.cases } />\n                                    </Col>\n                                    <Col>\n                                        <Statistic\n                                            title=\"Day Change\"\n                                            value={ Math.abs(this.state.casesBefore) }\n                                            valueStyle={ { color: this.state.casesBefore > 0 ? '#cf1322' : '#3f8600' } }\n                                            prefix={ this.state.casesBefore > 0 ? <ArrowUpOutlined /> : <ArrowDownOutlined /> }\n                                        />\n                                    </Col>\n                                    <Col>\n                                        <Statistic title=\"7 Day Avg\" value={ this.state.weekAvgCases } />\n                                    </Col>\n                                </Row>\n                            </Card>\n                        </Col>\n                    </Row>\n                </Card>\n                <Card>\n                    <Row align=\"middle\" justify=\"center\">\n                        <Col span={ 8 }>\n                            <Card title=\"Deaths\" bordered={ false } loading={ this.state.loading }>\n                                <Row justify=\"space-around\" gutter={ [24, 36] }>\n                                    <Col>\n                                        <Statistic title=\"New Deaths\" value={ this.state.deaths } />\n                                    </Col>\n                                    <Col>\n                                        <Statistic\n                                            title=\"Day Change\"\n                                            value={ Math.abs(this.state.deathsBefore) }\n                                            valueStyle={ { color: this.state.deathsBefore > 0 ? '#cf1322' : '#3f8600' } }\n                                            prefix={ this.state.deathsBefore > 0 ? <ArrowUpOutlined /> : <ArrowDownOutlined /> }\n                                        />\n                                    </Col>\n                                    <Col>\n                                        <Statistic title=\"7 Day Avg\" value={ this.state.weekAvgDeaths } />\n                                    </Col>\n                                </Row>\n                            </Card>\n                        </Col>\n                    </Row>\n                </Card>\n            </div>\n        )\n    }\n}\n\nexport default View;","import logo from './logo.svg';\nimport './App.css';\nimport { Route, Switch, HashRouter, Redirect } from \"react-router-dom\"\nimport View from './View'\nimport \"antd/dist/antd.css\";\nimport process from \"process\"\n\nconst areas = ['state', 'county', 'cbsa', 'country']\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <HashRouter basename={process.env.PUBLIC_URL}>\n        <Switch>\n          <Route path={\"/:area/:id\"} render={(props) => areas.includes(props.match.params.area) ? <View {...props} /> : <Redirect to=\"/\" /> } />\n          <Route from=\"/bayarea\" to=\"/cbsa/41860\" />\n          <Route from=\"/dfw\" to=\"/cbsa/19100\" />\n          <Route from=\"/sanjose\" to=\"/cbsa/41940\" />\n          <Route from=\"/dallas\" to=\"/county/01047\" />\n          <Route from=\"/sf\" to=\"/county/06075\" />\n          <Route from=\"/sanmateo\" to=\"/county/06081\" />\n          <Route render={() => <Redirect to=\"/country/us\" />} />\n        </Switch>\n      </HashRouter>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}